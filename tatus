[1mdiff --git a/app.py b/app.py[m
[1mindex 4665634..e2b7e59 100644[m
[1m--- a/app.py[m
[1m+++ b/app.py[m
[36m@@ -39,233 +39,233 @@[m [mdef blurt():[m
     return render_template('blurt/profile.html', form=form)[m
 [m
 [m
[31m-@celery.task[m
[31m-def reward_summary_task(username):[m
[31m-    blurt = BC.BlurtChain(username)[m
[31m-    duration = 30[m
[32m+[m[32m# @celery.task[m
[32m+[m[32m# def reward_summary_task(username):[m
[32m+[m[32m#     blurt = BC.BlurtChain(username)[m
[32m+[m[32m#     duration = 30[m
 [m
[31m-    key_name = username + '_reward_' + str(duration)[m
[31m-    data = blurt.get_reward_summary(duration)[m
[31m-    # data['reward_data'] = reward_data[m
[32m+[m[32m#     key_name = username + '_reward_' + str(duration)[m
[32m+[m[32m#     data = blurt.get_reward_summary(duration)[m
[32m+[m[32m#     # data['reward_data'] = reward_data[m
 [m
[31m-    # save reward_data in firbase[m
[31m-    blurt.set_data_fb("reward_summary", key_name, data)[m
[32m+[m[32m#     # save reward_data in firbase[m
[32m+[m[32m#     blurt.set_data_fb("reward_summary", key_name, data)[m
 [m
[31m-    return data[m
[32m+[m[32m#     return data[m
 [m
 [m
[31m-@app.route('/<username>')[m
[31m-@app.route('/<username>/')[m
[31m-def blurt_profile_data(username=None):[m
[31m-    data = {}[m
[32m+[m[32m# @app.route('/<username>')[m
[32m+[m[32m# @app.route('/<username>/')[m
[32m+[m[32m# def blurt_profile_data(username=None):[m
[32m+[m[32m#     data = {}[m
 [m
[31m-    if username:[m
[31m-        username = escape(username).lower()[m
[31m-        blurt = BC.BlurtChain(username)[m
[32m+[m[32m#     if username:[m
[32m+[m[32m#         username = escape(username).lower()[m
[32m+[m[32m#         blurt = BC.BlurtChain(username)[m
 [m
[31m-        # celery background task[m
[31m-        data = reward_summary_task.delay(username)[m
[31m-        print("REWARD_SUMMARY_TASK_DELAY ", data)[m
[31m-        print(vars(data))[m
[32m+[m[32m#         # celery background task[m
[32m+[m[32m#         data = reward_summary_task.delay(username)[m
[32m+[m[32m#         print("REWARD_SUMMARY_TASK_DELAY ", data)[m
[32m+[m[32m#         print(vars(data))[m
 [m
[31m-        # check session profile_data[m
[31m-        profile_data = username + '_profile_data'[m
[31m-        if session.get(profile_data):[m
[31m-            data = session[profile_data][m
[31m-        else:[m
[31m-            data = blurt.get_account_info()[m
[31m-            vote_data = blurt.get_vote_history(username)[m
[32m+[m[32m#         # check session profile_data[m
[32m+[m[32m#         profile_data = username + '_profile_data'[m
[32m+[m[32m#         if session.get(profile_data):[m
[32m+[m[32m#             data = session[profile_data][m
[32m+[m[32m#         else:[m
[32m+[m[32m#             data = blurt.get_account_info()[m
[32m+[m[32m#             vote_data = blurt.get_vote_history(username)[m
 [m
[31m-            data['labels'] = vote_data['labels'][m
[31m-            data['permlinks'] = vote_data['permlinks'][m
[31m-            data['upvotes'] = vote_data['upvotes'][m
[31m-            data['count_data'] = vote_data['count_data'][m
[31m-            data['weight_data'] = vote_data['weight_data'][m
[31m-            data['total_votes'] = vote_data['total_votes'][m
[32m+[m[32m#             data['labels'] = vote_data['labels'][m
[32m+[m[32m#             data['permlinks'] = vote_data['permlinks'][m
[32m+[m[32m#             data['upvotes'] = vote_data['upvotes'][m
[32m+[m[32m#             data['count_data'] = vote_data['count_data'][m
[32m+[m[32m#             data['weight_data'] = vote_data['weight_data'][m
[32m+[m[32m#             data['total_votes'] = vote_data['total_votes'][m
 [m
[31m-            session[profile_data] = data[m
[32m+[m[32m#             session[profile_data] = data[m
 [m
[31m-    return render_template('blurt/profile_data.html',[m
[31m-                           username=blurt.username, data=data)[m
[32m+[m[32m#     return render_template('blurt/profile_data.html',[m
[32m+[m[32m#                            username=blurt.username, data=data)[m
 [m
 [m
[31m-@app.route('/blurt/stats')[m
[31m-@app.route('/blurt/stats/')[m
[31m-def stats():[m
[31m-    blurt = BC.BlurtChain(username=None)[m
[31m-    stats_data = blurt.get_stats()[m
[32m+[m[32m# @app.route('/blurt/stats')[m
[32m+[m[32m# @app.route('/blurt/stats/')[m
[32m+[m[32m# def stats():[m
[32m+[m[32m#     blurt = BC.BlurtChain(username=None)[m
[32m+[m[32m#     stats_data = blurt.get_stats()[m
 [m
[31m-    return render_template('blurt/stats.html', data=stats_data)[m
[32m+[m[32m#     return render_template('blurt/stats.html', data=stats_data)[m
 [m
 [m
[31m-@app.route('/blurt/upvote', methods=['GET', 'POST'])[m
[31m-@app.route('/blurt/upvote/', methods=['GET', 'POST'])[m
[31m-def upvote():[m
[31m-    form = postUrlForm(request.form)[m
[32m+[m[32m# @app.route('/blurt/upvote', methods=['GET', 'POST'])[m
[32m+[m[32m# @app.route('/blurt/upvote/', methods=['GET', 'POST'])[m
[32m+[m[32m# def upvote():[m
[32m+[m[32m#     form = postUrlForm(request.form)[m
 [m
[31m-    if request.method == 'POST':[m
[31m-        if form.validate():[m
[31m-            url = request.form['url'].lower()[m
[31m-            blurt = BC.BlurtChain(username=None)[m
[31m-            result = blurt.process_upvote(url)[m
[31m-            flash(result['message'])[m
[31m-        else:[m
[31m-            # check empty url[m
[31m-            flash('Error: URL is required')[m
[32m+[m[32m#     if request.method == 'POST':[m
[32m+[m[32m#         if form.validate():[m
[32m+[m[32m#             url = request.form['url'].lower()[m
[32m+[m[32m#             blurt = BC.BlurtChain(username=None)[m
[32m+[m[32m#             result = blurt.process_upvote(url)[m
[32m+[m[32m#             flash(result['message'])[m
[32m+[m[32m#         else:[m
[32m+[m[32m#             # check empty url[m
[32m+[m[32m#             flash('Error: URL is required')[m
 [m
[31m-    return render_template('blurt/upvote.html', form=form)[m
[32m+[m[32m#     return render_template('blurt/upvote.html', form=form)[m
 [m
 [m
 # BLURT API[m
[31m-@app.route('/api/blurt/follower/<username>')[m
[31m-@app.route('/api/blurt/follower/<username>/')[m
[31m-def blurt_follower(username=None):[m
[31m-    data = {}[m
[31m-    if username:[m
[31m-        blurt = BC.BlurtChain(username)[m
[31m-        data = blurt.get_follower()[m
[31m-[m
[31m-    return jsonify(data)[m
[31m-[m
[31m-[m
[31m-@app.route('/api/blurt/following/<username>')[m
[31m-@app.route('/api/blurt/following/<username>/')[m
[31m-def blurt_following(username=None):[m
[31m-    data = {}[m
[31m-    if username:[m
[31m-        blurt = BC.BlurtChain(username)[m
[31m-        data = blurt.get_following()[m
[31m-[m
[31m-    return jsonify(data)[m
[31m-[m
[31m-[m
[31m-@app.route('/api/blurt/votes/<username>')[m
[31m-@app.route('/api/blurt/votes/<username>/')[m
[31m-def blurt_votes(username=None):[m
[31m-    data = {}[m
[31m-    if username:[m
[31m-        blurt = BC.BlurtChain(username)[m
[31m-        data = blurt.get_vote_history()[m
[31m-[m
[31m-    return jsonify(data)[m
[31m-[m
[31m-[m
[31m-@app.route('/api/blurt/mute/<username>')[m
[31m-@app.route('/api/blurt/mute/<username>/')[m
[31m-def blurt_mute(username=None):[m
[31m-    data = {}[m
[31m-    if username:[m
[31m-        blurt = BC.BlurtChain(username)[m
[31m-        data = blurt.get_mute()[m
[31m-[m
[31m-    return jsonify(data)[m
[31m-[m
[31m-[m
[31m-@app.route('/api/blurt/delegation/<username>/<option>')[m
[31m-@app.route('/api/blurt/delegation/<username>/<option>/')[m
[31m-def blurt_delegation(username=None, option=None):[m
[31m-    delegation_type = ["in", "out", "exp"][m
[31m-    data = {}[m
[31m-    if username and option in delegation_type:[m
[31m-        # check session delegation_data[m
[31m-        delegation_data = username + '_delegation_' + option[m
[31m-        if session.get(delegation_data):[m
[31m-            data = session[delegation_data][m
[31m-        else:[m
[31m-            blurt = BC.BlurtChain(username)[m
[31m-            data = blurt.get_delegation_new(option)[m
[31m-            session[delegation_data] = data[m
[31m-[m
[31m-    return jsonify(data)[m
[31m-[m
[31m-[m
[31m-@app.route('/api/blurt/reward/<username>/<int:duration>')[m
[31m-@app.route('/api/blurt/reward/<username>/<int:duration>/')[m
[31m-@app.route('/api/blurt/reward/<username>/<int:duration>/<option>')[m
[31m-@app.route('/api/blurt/reward/<username>/<int:duration>/<option>/')[m
[31m-def blurt_reward(username=None, duration=1, option=None):[m
[31m-    data = {}[m
[31m-    if username:[m
[31m-        blurt = BC.BlurtChain(username)[m
[31m-[m
[31m-        reward_data = username + '_reward_' + str(duration)[m
[31m-        print(reward_data)[m
[31m-[m
[31m-        if duration == 30:[m
[31m-            key_data = blurt.get_key_data_fb("reward_summary", reward_data)[m
[31m-            data = key_data.val()[m
[31m-            print("key_data ", data)[m
[31m-            if data:[m
[31m-                session[reward_data] = data[m
[31m-                blurt.remove_key_data_fb("reward_summary", reward_data)[m
[31m-[m
[31m-        # check session reward_data[m
[31m-        if session.get(reward_data):[m
[31m-            data = session[reward_data][m
[31m-            print("SESSION_REWARD_DATA", duration, data)[m
[31m-        else:[m
[31m-            data = blurt.get_reward_summary(duration, option=option)[m
[31m-            session[reward_data] = data[m
[31m-            print("GET_REWARD_SUMMARY", duration, data)[m
[31m-[m
[31m-    return jsonify(data)[m
[31m-[m
[31m-[m
[31m-@app.route('/api/blurt/author_reward/<username>/<int:duration>')[m
[31m-@app.route('/api/blurt/author_reward/<username>/<int:duration>/')[m
[31m-def blurt_author(username=None, duration=1):[m
[31m-    data = None[m
[31m-    if username:[m
[31m-        blurt = BC.BlurtChain(username)[m
[31m-[m
[31m-        # check session reward_data[m
[31m-        reward_data = username + '_author_reward_' + str(duration)[m
[31m-        if session.get(reward_data):[m
[31m-            data = session[reward_data][m
[31m-        else:[m
[31m-            data = blurt.get_author_reward(duration)[m
[31m-            if data != "0.0":[m
[31m-                session[reward_data] = data[m
[31m-[m
[31m-    return jsonify(data)[m
[31m-[m
[31m-[m
[31m-@app.route('/api/blurt/curation_reward/<username>/<int:duration>')[m
[31m-@app.route('/api/blurt/curation_reward/<username>/<int:duration>/')[m
[31m-def blurt_curation(username=None, duration=1):[m
[31m-    data = None[m
[31m-    if username:[m
[31m-        blurt = BC.BlurtChain(username)[m
[31m-[m
[31m-        # check session reward_data[m
[31m-        reward_data = username + '_curation_reward_' + str(duration)[m
[31m-        if session.get(reward_data):[m
[31m-            data = session[reward_data][m
[31m-        else:[m
[31m-            data = blurt.get_curation_reward(duration)[m
[31m-            if data != "0.0":[m
[31m-                session[reward_data] = data[m
[31m-[m
[31m-    return jsonify(data)[m
[31m-[m
[31m-[m
[31m-@app.route('/api/blurt/producer_reward/<username>/<int:duration>')[m
[31m-@app.route('/api/blurt/producer_reward/<username>/<int:duration>/')[m
[31m-def blurt_producer(username=None, duration=1):[m
[31m-    data = None[m
[31m-    if username:[m
[31m-        blurt = BC.BlurtChain(username)[m
[31m-[m
[31m-        # check session reward_data[m
[31m-        reward_data = username + '_producer_reward_' + str(duration)[m
[31m-        if session.get(reward_data):[m
[31m-            data = session[reward_data][m
[31m-        else:[m
[31m-            data = blurt.get_producer_reward(duration)[m
[31m-            if data != "0.0":[m
[31m-                session[reward_data] = data[m
[31m-[m
[31m-    return jsonify(data)[m
[32m+[m[32m# @app.route('/api/blurt/follower/<username>')[m
[32m+[m[32m# @app.route('/api/blurt/follower/<username>/')[m
[32m+[m[32m# def blurt_follower(username=None):[m
[32m+[m[32m#     data = {}[m
[32m+[m[32m#     if username:[m
[32m+[m[32m#         blurt = BC.BlurtChain(username)[m
[32m+[m[32m#         data = blurt.get_follower()[m
[32m+[m
[32m+[m[32m#     return jsonify(data)[m
[32m+[m
[32m+[m
[32m+[m[32m# @app.route('/api/blurt/following/<username>')[m
[32m+[m[32m# @app.route('/api/blurt/following/<username>/')[m
[32m+[m[32m# def blurt_following(username=None):[m
[32m+[m[32m#     data = {}[m
[32m+[m[32m#     if username:[m
[32m+[m[32m#         blurt = BC.BlurtChain(username)[m
[32m+[m[32m#         data = blurt.get_following()[m
[32m+[m
[32m+[m[32m#     return jsonify(data)[m
[32m+[m
[32m+[m
[32m+[m[32m# @app.route('/api/blurt/votes/<username>')[m
[32m+[m[32m# @app.route('/api/blurt/votes/<username>/')[m
[32m+[m[32m# def blurt_votes(username=None):[m
[32m+[m[32m#     data = {}[m
[32m+[m[32m#     if username:[m
[32m+[m[32m#         blurt = BC.BlurtChain(username)[m
[32m+[m[32m#         data = blurt.get_vote_history()[m
[32m+[m
[32m+[m[32m#     return jsonify(data)[m
[32m+[m
[32m+[m
[32m+[m[32m# @app.route('/api/blurt/mute/<username>')[m
[32m+[m[32m# @app.route('/api/blurt/mute/<username>/')[m
[32m+[m[32m# def blurt_mute(username=None):[m
[32m+[m[32m#     data = {}[m
[32m+[m[32m#     if username:[m
[32m+[m[32m#         blurt = BC.BlurtChain(username)[m
[32m+[m[32m#         data = blurt.get_mute()[m
[32m+[m
[32m+[m[32m#     return jsonify(data)[m
[32m+[m
[32m+[m
[32m+[m[32m# @app.route('/api/blurt/delegation/<username>/<option>')[m
[32m+[m[32m# @app.route('/api/blurt/delegation/<username>/<option>/')[m
[32m+[m[32m# def blurt_delegation(username=None, option=None):[m
[32m+[m[32m#     delegation_type = ["in", "out", "exp"][m
[32m+[m[32m#     data = {}[m
[32m+[m[32m#     if username and option in delegation_type:[m
[32m+[m[32m#         # check session delegation_data[m
[32m+[m[32m#         delegation_data = username + '_delegation_' + option[m
[32m+[m[32m#         if session.get(delegation_data):[m
[32m+[m[32m#             data = session[delegation_data][m
[32m+[m[32m#         else:[m
[32m+[m[32m#             blurt = BC.BlurtChain(username)[m
[32m+[m[32m#             data = blurt.get_delegation_new(option)[m
[32m+[m[32m#             session[delegation_data] = data[m
[32m+[m
[32m+[m[32m#     return jsonify(data)[m
[32m+[m
[32m+[m
[32m+[m[32m# @app.route('/api/blurt/reward/<username>/<int:duration>')[m
[32m+[m[32m# @app.route('/api/blurt/reward/<username>/<int:duration>/')[m
[32m+[m[32m# @app.route('/api/blurt/reward/<username>/<int:duration>/<option>')[m
[32m+[m[32m# @app.route('/api/blurt/reward/<username>/<int:duration>/<option>/')[m
[32m+[m[32m# def blurt_reward(username=None, duration=1, option=None):[m
[32m+[m[32m#     data = {}[m
[32m+[m[32m#     if username:[m
[32m+[m[32m#         blurt = BC.BlurtChain(username)[m
[32m+[m
[32m+[m[32m#         reward_data = username + '_reward_' + str(duration)[m
[32m+[m[32m#         print(reward_data)[m
[32m+[m
[32m+[m[32m#         if duration == 30:[m
[32m+[m[32m#             key_data = blurt.get_key_data_fb("reward_summary", reward_data)[m
[32m+[m[32m#             data = key_data.val()[m
[32m+[m[32m#             print("key_data ", data)[m
[32m+[m[32m#             if data:[m
[32m+[m[32m#                 session[reward_data] = data[m
[32m+[m[32m#                 blurt.remove_key_data_fb("reward_summary", reward_data)[m
[32m+[m
[32m+[m[32m#         # check session reward_data[m
[32m+[m[32m#         if session.get(reward_data):[m
[32m+[m[32m#             data = session[reward_data][m
[32m+[m[32m#             print("SESSION_REWARD_DATA", duration, data)[m
[32m+[m[32m#         else:[m
[32m+[m[32m#             data = blurt.get_reward_summary(duration, option=option)[m
[32m+[m[32m#             session[reward_data] = data[m
[32m+[m[32m#             print("GET_REWARD_SUMMARY", duration, data)[m
[32m+[m
[32m+[m[32m#     return jsonify(data)[m
[32m+[m
[32m+[m
[32m+[m[32m# @app.route('/api/blurt/author_reward/<username>/<int:duration>')[m
[32m+[m[32m# @app.route('/api/blurt/author_reward/<username>/<int:duration>/')[m
[32m+[m[32m# def blurt_author(username=None, duration=1):[m
[32m+[m[32m#     data = None[m
[32m+[m[32m#     if username:[m
[32m+[m[32m#         blurt = BC.BlurtChain(username)[m
[32m+[m
[32m+[m[32m#         # check session reward_data[m
[32m+[m[32m#         reward_data = username + '_author_reward_' + str(duration)[m
[32m+[m[32m#         if session.get(reward_data):[m
[32m+[m[32m#             data = session[reward_data][m
[32m+[m[32m#         else:[m
[32m+[m[32m#             data = blurt.get_author_reward(duration)[m
[32m+[m[32m#             if data != "0.0":[m
[32m+[m[32m#                 session[reward_data] = data[m
[32m+[m
[32m+[m[32m#     return jsonify(data)[m
[32m+[m
[32m+[m
[32m+[m[32m# @app.route('/api/blurt/curation_reward/<username>/<int:duration>')[m
[32m+[m[32m# @app.route('/api/blurt/curation_reward/<username>/<int:duration>/')[m
[32m+[m[32m# def blurt_curation(username=None, duration=1):[m
[32m+[m[32m#     data = None[m
[32m+[m[32m#     if username:[m
[32m+[m[32m#         blurt = BC.BlurtChain(username)[m
[32m+[m
[32m+[m[32m#         # check session reward_data[m
[32m+[m[32m#         reward_data = username + '_curation_reward_' + str(duration)[m
[32m+[m[32m#         if session.get(reward_data):[m
[32m+[m[32m#             data = session[reward_data][m
[32m+[m[32m#         else:[m
[32m+[m[32m#             data = blurt.get_curation_reward(duration)[m
[32m+[m[32m#             if data != "0.0":[m
[32m+[m[32m#                 session[reward_data] = data[m
[32m+[m
[32m+[m[32m#     return jsonify(data)[m
[32m+[m
[32m+[m
[32m+[m[32m# @app.route('/api/blurt/producer_reward/<username>/<int:duration>')[m
[32m+[m[32m# @app.route('/api/blurt/producer_reward/<username>/<int:duration>/')[m
[32m+[m[32m# def blurt_producer(username=None, duration=1):[m
[32m+[m[32m#     data = None[m
[32m+[m[32m#     if username:[m
[32m+[m[32m#         blurt = BC.BlurtChain(username)[m
[32m+[m
[32m+[m[32m#         # check session reward_data[m
[32m+[m[32m#         reward_data = username + '_producer_reward_' + str(duration)[m
[32m+[m[32m#         if session.get(reward_data):[m
[32m+[m[32m#             data = session[reward_data][m
[32m+[m[32m#         else:[m
[32m+[m[32m#             data = blurt.get_producer_reward(duration)[m
[32m+[m[32m#             if data != "0.0":[m
[32m+[m[32m#                 session[reward_data] = data[m
[32m+[m
[32m+[m[32m#     return jsonify(data)[m
 [m
 [m
 if __name__ == "__main__":[m
[1mdiff --git a/templates/blurt/profile.html b/templates/blurt/profile.html[m
[1mindex a76eab3..a302f8b 100644[m
[1m--- a/templates/blurt/profile.html[m
[1m+++ b/templates/blurt/profile.html[m
[36m@@ -63,7 +63,7 @@[m
                             <div class="input-group-text">@</div>[m
                         </div>[m
                         <input type="text" class="form-control" id="inlineFormInputGroup"[m
[31m-                            name="username" placeholder="Username">[m
[32m+[m[32m                            name="username" placeholder="Username" disabled>[m
                       </div>[m
                     </div>[m
                     <div class="col-auto">[m
